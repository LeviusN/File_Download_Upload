{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niki\\\\Desktop\\\\Project_PDF\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload() {\n  _s();\n\n  const [file, setFile] = useState('');\n  const [data, getFile] = useState({\n    name: \"\",\n    path: \"\"\n  });\n  const el = useRef();\n  const [fileList, setFileList] = useState([]);\n\n  const handleChange = e => {\n    const file = e.target.files[0];\n    console.log(file);\n    setFile(file);\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    axios.post('http://localhost:3001/upload', formData).then(res => {\n      getFile({\n        name: res.data.name,\n        path: 'http://localhost:3001' + res.data.path\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const getFolder = () => {\n    axios.get('http://localhost:3001/show').then(response => {\n      setFileList(response.data);\n    });\n  };\n\n  const deleteFile = id => {\n    axios.delete(`http://localhost:3001/delete/${id}`).then(response => {\n      setFileList(fileList.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  const downloadFile = (id, name) => {\n    saveAs(id, name);\n    return console.log(id, name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: el,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), data.path && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.path,\n      alt: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getFolder,\n      children: \"ShowFolder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: fileList.map((val, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.id - fileList.length()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.pathH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteFile(val.id);\n            },\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              downloadFile(val.pathH, val.name);\n            },\n            children: \"download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, val.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FileUpload, \"V7kgzEUGOM18vFgtOJQc7+BGHGY=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/Niki/Desktop/Project_PDF/client/src/App.js"],"names":["React","useRef","useState","axios","saveAs","FileUpload","file","setFile","data","getFile","name","path","el","fileList","setFileList","handleChange","e","target","files","console","log","uploadFile","formData","FormData","append","post","then","res","catch","err","getFolder","get","response","deleteFile","id","delete","filter","val","downloadFile","map","key","length","pathH"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { saveAs } from 'file-saver'\n\nfunction FileUpload() {\n\n    const [file, setFile] = useState(''); \n    const [data, getFile] = useState({ name: \"\", path: \"\" });\n    const el = useRef(); \n    const [fileList, setFileList] = useState([]);\n    \n\n    const handleChange = (e) => {\n        const file = e.target.files[0]; \n        console.log(file);\n        setFile(file); \n    }\n\n    const uploadFile = () => {\n        const formData = new FormData();\n        formData.append('file', file); \n        axios.post('http://localhost:3001/upload', formData).then(res => {\n            getFile({ name: res.data.name,\n                     path: 'http://localhost:3001' + res.data.path\n                   })\n        }).catch(err => console.log(err))}\n\n    const getFolder = () => {\n      axios.get('http://localhost:3001/show').then((response) => {\n        setFileList(response.data)\n      });\n    };\n\n    const deleteFile = (id) => {\n      axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n        setFileList(fileList.filter((val) => {\n          return val.id !== id\n        }))\n      });\n    };\n\n    const downloadFile = (id,name) => {\n      saveAs(id,name);\n      return console.log(id,name)\n    };\n       \n    return (\n      <div className=\"App\">\n        <input type=\"file\" ref={el} onChange={handleChange} />\n        <button onClick={uploadFile}>Upload</button>\n        <hr />\n        {data.path && <img src={data.path} alt={data.name} />}\n        \n        \n        <button onClick={getFolder}>ShowFolder</button>\n\n        <table className=\"table table-hover table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Path</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        {fileList.map((val,key) => (\n            <tr key={val.id}>\n              <td>{val.id-fileList.length()}</td>\n              <td>{val.name}</td> \n              <td>{val.pathH}</td>\n              <button onClick={() => {deleteFile(val.id)}}>delete</button>\n              <button onClick={() => {downloadFile(val.pathH, val.name)}}>download</button>\n            </tr>\n        ))}\n        </tbody> \n        </table> \n        </div>\n      \n    );     \n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}
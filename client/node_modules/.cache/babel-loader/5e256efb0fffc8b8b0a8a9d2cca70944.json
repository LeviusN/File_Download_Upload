{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niki\\\\Desktop\\\\Project_PDF\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload() {\n  _s();\n\n  const [file, setFile] = useState('');\n  const [data, getFile] = useState({\n    name: \"\",\n    path: \"\"\n  });\n  const el = useRef();\n  const [employeesList, setEmployeeList] = useState([]);\n\n  const handleChange = e => {\n    const file = e.target.files[0];\n    console.log(file);\n    setFile(file);\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append('file', file); // appending file\n\n    axios.post('http://localhost:3001/upload', formData).then(res => {\n      console.log(res);\n      getFile({\n        name: res.data.name,\n        path: 'http://localhost:3001' + res.data.path\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const getFolder = () => {\n    axios.get('http://localhost:3001/show').then(response => {\n      setEmployeeList(response.data);\n    });\n  };\n\n  const deleteFile = id => {\n    axios.delete(`http://localhost:3001/delete/${id}`).then(response => {\n      setEmployeeList(employeesList.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: el,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), data.path && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.path,\n      alt: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getFolder,\n        children: \"ShowFolder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employeesList.map((val, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.pathH\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteFile(val.id);\n              },\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {},\n              children: \"download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, val.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FileUpload, \"6dHad51pxPw1QrVLiInwBXlOfLc=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/Niki/Desktop/Project_PDF/client/src/App.js"],"names":["React","useRef","useState","axios","FileUpload","file","setFile","data","getFile","name","path","el","employeesList","setEmployeeList","handleChange","e","target","files","console","log","uploadFile","formData","FormData","append","post","then","res","catch","err","getFolder","get","response","deleteFile","id","delete","filter","val","map","key","pathH"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction FileUpload() {\n\n    const [file, setFile] = useState(''); \n    const [data, getFile] = useState({ name: \"\", path: \"\" });\n    const el = useRef(); \n    const [employeesList, setEmployeeList] = useState([]);\n    \n\n    const handleChange = (e) => {\n        const file = e.target.files[0]; \n        console.log(file);\n        setFile(file); \n    }\n\n    const uploadFile = () => {\n        const formData = new FormData();\n        formData.append('file', file); // appending file\n        axios.post('http://localhost:3001/upload', formData).then(res => {\n            console.log(res);\n            getFile({ name: res.data.name,\n                     path: 'http://localhost:3001' + res.data.path\n                   })\n        }).catch(err => console.log(err))}\n\n    const getFolder = () => {\n      axios.get('http://localhost:3001/show').then((response) => {\n        setEmployeeList(response.data)\n      });\n    };\n\n    const deleteFile = (id) => {\n      axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n        setEmployeeList(employeesList.filter((val) => {\n          return val.id !== id\n        }))\n      });\n    };\n       \n    return (\n      <div className=\"App\">\n        <input type=\"file\" ref={el} onChange={handleChange} />\n        <button onClick={uploadFile}>Upload</button>\n        <hr />\n        {data.path && <img src={data.path} alt={data.name} />}\n        \n        <div className=\"employees\">\n        <button onClick={getFolder}>ShowFolder</button>\n\n        <table className=\"table table-hover table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Path</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        {employeesList.map((val,key) => (\n            <tr key={val.id}>\n              <td>{val.id}</td> \n              <td>{val.name}</td> \n              <td>{val.pathH}</td>\n              <button onClick={() => {deleteFile(val.id)}}>delete</button>\n              <button onClick={() => {}}>download</button>\n            </tr>\n          \n        ))}\n        \n        </tbody> \n        </table> \n        </div>\n      </div>\n    );     \n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}